üßÆ Added Full Non-Linear Regression Lab (lab4.txt) with Theory, Code, and Visuals

üìÇ Added new visual assets for conceptual and implementation clarity:
  ‚Ä¢ 1.1-non_linear_regression.jpg ‚Äî introduction to non-linear regression
  ‚Ä¢ 1.2-Quadratic_function_regression.jpg ‚Äî quadratic function illustration
  ‚Ä¢ 1.3-Exponential_function_regression.jpg ‚Äî exponential regression example
  ‚Ä¢ 1.4-Log_function_regression.jpg ‚Äî logarithmic regression visualization
  ‚Ä¢ 1.5-Sigmoidal_Logistic_regression.jpg ‚Äî S-shaped logistic curve visualization
  ‚Ä¢ 1.6-Nonlinear_regression.jpg ‚Äî comparison of linear vs non-linear fits
  ‚Ä¢ 1.7-Logistic_function.jpg ‚Äî logistic function shape and formula
  ‚Ä¢ 1.8-Finding_best_parameters.jpg ‚Äî parameter optimization concept
  ‚Ä¢ 1.9-Plot_final_regression_model.jpg ‚Äî visual of the final fitted curve

üß† Added lab4.txt: 'Non-Linear Regression Analysis'
  - Structured with Markdown-style sections for readability and reproducibility.
  - Includes both **conceptual and practical** understanding of non-linear regression.

üìò Key Sections Added:
  1Ô∏è‚É£ **Objectives**
     - Differentiate between linear and non-linear regression
     - Implement non-linear regression model using Python

  2Ô∏è‚É£ **Introductory Concepts**
     - Explanation of linear vs. non-linear model assumptions
     - Description of curvy trends where linear regression fails

  3Ô∏è‚É£ **Practical Demonstrations**
     - Importing core libraries (`numpy`, `matplotlib`, `pandas`, `scipy`)
     - Visualization of various non-linear functions:
       ‚Ä¢ Cubic  
       ‚Ä¢ Quadratic  
       ‚Ä¢ Exponential  
       ‚Ä¢ Logarithmic  
       ‚Ä¢ Sigmoidal (Logistic)
     - Interactive plotting examples for each function with labeled axes.

  4Ô∏è‚É£ **China GDP Non-Linear Regression Case Study**
     - Real dataset import via `wget` from IBM Skills Network
     - Data preview and exploration
     - Visualization of GDP trend (1960‚Äì2014)
     - Selection of logistic regression model for fitting
     - Explanation of logistic function and parameter roles (Œ≤‚ÇÅ, Œ≤‚ÇÇ)
     - Model initialization and plotting sample sigmoid curve
     - Data normalization for numerical stability
     - Parameter optimization using `scipy.optimize.curve_fit`
     - Model evaluation and visualization of fitted vs. actual data

  5Ô∏è‚É£ **Outputs**
     - Display of optimized Œ≤‚ÇÅ and Œ≤‚ÇÇ parameters
     - Final model plotted for GDP vs. Year, with legend and labeling.

‚úÖ Outcome:
  - Learners can now clearly understand how to model non-linear relationships.
  - Demonstrates how to fit real-world data (GDP) using logistic regression.
  - Provides a complete lab ready for submission or extension into advanced curve fitting.

üöÄ Next Step:
  - Prepare `lab5.txt`: *Polynomial Regression in Practice* ‚Äî to extend this module into multi-degree regression modeling and comparison with non-linear models.

